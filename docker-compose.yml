version: "3.0"

services:
  resource-service-app:
    image: resource-service-app
    build:
      context: .
      dockerfile: Dockerfile
    container_name: resource-service-app-microservices_course
    environment:
      SPRING_CLOUD_CONFIG_URI: ${SPRING_CLOUD_CONFIG_URI}
    ports:                           # to expose actuator
      - "8080:8080"
    depends_on:
      - localstack
      - rabbitmq
      - postgres
    networks:
      - service-configuration_default
      - service-registry_default
      - postgres
      - localstack
      - rabbitmq
      - elasticsearch

  localstack:
    container_name: localstack_microservices_course
    image: localstack/localstack:latest
    environment:
      - SERVICES=lambda,s3
      - AWS_DEFAULT_REGION=us-east-1
      - DOCKER_HOST=unix:///var/run/docker.sock
      - EDGE_PORT=4566
    ports:
      - '4566:4566'
    volumes:
      - "${TEMPDIR:-/tmp/localstack}:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - localstack

  rabbitmq:
    container_name: rabbit_microservices_course
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbitmq

  postgres:
    container_name: postgres_resource_service_microservices_course
    image: postgres:11
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    networks:
      - postgres

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.3.3
    container_name: elasticsearch_microservices_course
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    networks:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.3.3
    container_name: kibana_microservices_course
    ports:
      - '5601:5601'
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    depends_on:
      - elasticsearch
    networks:
      elasticsearch:

  logstash:
    image: docker.elastic.co/logstash/logstash:8.3.3
    container_name: logstash_microservices_course
    ports:
      - '5000:5000/tcp'
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro      # Pipeline configuration
    depends_on:
      - elasticsearch
    networks:
      elasticsearch:

  keycloack:
    image: quay.io/keycloak/keycloak:20.0.0
    container_name: keycloack_microservices_course
    command: start-dev
    ports:
      - '8890:8080'
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres_keycloack
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    depends_on:
      - postgres_keycloack
    networks:
      - keycloack

  postgres_keycloack:
    container_name: postgres_keycloack_microservices_course
    image: postgres:11
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    ports:
      - '5435:5432'
    networks:
      - keycloack

networks:
  postgres:
  localstack:
  rabbitmq:
  elasticsearch:
  keycloack:
  service-registry_default:
    external: true
  service-configuration_default:
    external: true
